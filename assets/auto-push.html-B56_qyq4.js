import{_ as t,c as l,b as n,d as a,g as p,e as i,a as c,o,r as u}from"./app-DMWp9eL9.js";const r={};function d(m,s){const e=u("Mermaid");return o(),l("div",null,[s[0]||(s[0]=n("div",{class:"hint-container info"},[n("p",{class:"hint-container-title"},"相关信息"),n("p",null,[a("这是一个"),n("code",null,"GitHub Actions"),a("的配置文件，整体思路是，获取本次更新的url"),n("br"),a(" （通过对比两次提交的sitemap.xml文件），所以触发条件是deploy分支有推送并修改了"),n("code",null,"sitemap.xml"),a("文件，再利用python脚本进行url推送到百度、Bing、Google")]),n("p",null,[a("脚本代码请看这里👉"),n("a",{href:"/posts/Python/submit-url"},"提交URL到搜索引擎（百度、Bing、Google）")])],-1)),p(" more "),s[1]||(s[1]=n("p",null,[a("前些天不是写了Bing的提交脚本吗，但是每次都要自己手动跑脚本也很麻烦，但我又没有服务器，所以用上了GitHub Actions了嘛"),n("br"),a(" 总的来说做了以下事情：")],-1)),s[2]||(s[2]=n("ol",null,[n("li",null,"提交代码并修改sitemap.xml 后触发工作流"),n("li",null,"比对上一次提交和本次提交的新增URL"),n("li",null,"将URL分别提交给百度站长、Bing、Google 供搜索引擎快速收录"),n("li")],-1)),s[3]||(s[3]=n("h2",{id:"流程解读",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#流程解读"},[n("span",null,"流程解读")])],-1)),i(e,{id:"mermaid-34",code:"eJylUk1PwkAQvfdXbOKVJogBYg8mFIIXT8aLaTiUdguNm5a0S5Cb+BEDGCoHiTGaiBjhQMAL0YSAf6Yfy79wqUADN3Uvm3lvZt7bmWVZlsEqRpAD7qji9eqk2yHDMTPHFaSXpLxoYHDEM4Aes5jNGWIhD9JAIF+3pH1DLh/cx37GZ2XVgBJWdQ0cHPoAaXw4VstrDJ2XC8e6n11bLLtHBlNvMnCaE3v8Shs41rl7905xo6j5RVCT/TshkO6bYzXdRm92VskAmgJ4wa1XaUsq6fbb9rjjPS+Y5IKxP2sBMydSgjOoks7Vj92ll5o9fSKjlp+RnstJSDTNFFTAvgGhhsUcUFSEuK1wWJJFKWRiQz+BGyFbUmWc5yKF05CkI93gthRFWXKyaNLJGWKZA1EQXZM4hogONtBQspK8s73SWAv/qsGjIgwUIuFdaVW2Ef5SwcRlBOn+F9bj8XAsEliPxf7hGySC0QQgH0qulhKgqeULGf+zMN9pvxYZ"}),s[4]||(s[4]=c(`<h2 id="配置代码" tabindex="-1"><a class="header-anchor" href="#配置代码"><span>配置代码</span></a></h2><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"><span class="token key atrule">name</span><span class="token punctuation">:</span> 推送脚本</span>
<span class="line"></span>
<span class="line"><span class="token key atrule">on</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">push</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">branches</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> gh<span class="token punctuation">-</span>pages</span>
<span class="line">    <span class="token key atrule">paths</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> <span class="token string">&#39;sitemap.xml&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token key atrule">jobs</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">push_bot</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest</span>
<span class="line">    <span class="token key atrule">steps</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Checkout gh<span class="token punctuation">-</span>pages branch</span>
<span class="line">        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/checkout@v3</span>
<span class="line">        <span class="token key atrule">with</span><span class="token punctuation">:</span></span>
<span class="line">          <span class="token key atrule">fetch-depth</span><span class="token punctuation">:</span> <span class="token number">0</span></span>
<span class="line">          <span class="token key atrule">ref</span><span class="token punctuation">:</span> <span class="token string">&#39;gh-pages&#39;</span></span>
<span class="line">          <span class="token key atrule">path</span><span class="token punctuation">:</span> gh<span class="token punctuation">-</span>pages</span>
<span class="line">          </span>
<span class="line">      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> 获取上一次提交SHA</span>
<span class="line">        <span class="token key atrule">id</span><span class="token punctuation">:</span> last<span class="token punctuation">-</span>commit</span>
<span class="line">        <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string"></span>
<span class="line">          cd gh-pages</span>
<span class="line">          PREV=$(git log --format=&quot;%H&quot; -n 2 | tail -n 1)</span>
<span class="line">          echo &quot;SHA_KEY=$PREV&quot; &gt;&gt; $GITHUB_OUTPUT</span>
<span class="line">          echo $PREV</span></span>
<span class="line">        </span>
<span class="line">      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> 拉取prev代码</span>
<span class="line">        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/checkout@v3</span>
<span class="line">        <span class="token key atrule">with</span><span class="token punctuation">:</span></span>
<span class="line">          <span class="token key atrule">ref</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> steps.last<span class="token punctuation">-</span>commit.outputs.SHA_KEY <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
<span class="line">          <span class="token key atrule">path</span><span class="token punctuation">:</span> prev</span>
<span class="line"></span>
<span class="line">      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Checkout main branch</span>
<span class="line">        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/checkout@v3</span>
<span class="line">        <span class="token key atrule">with</span><span class="token punctuation">:</span></span>
<span class="line">          <span class="token key atrule">ref</span><span class="token punctuation">:</span> <span class="token string">&#39;main&#39;</span></span>
<span class="line">          <span class="token key atrule">path</span><span class="token punctuation">:</span> main</span>
<span class="line"></span>
<span class="line">      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Set up Python</span>
<span class="line">        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/setup<span class="token punctuation">-</span>python@v4</span>
<span class="line">        <span class="token key atrule">with</span><span class="token punctuation">:</span></span>
<span class="line">          <span class="token key atrule">python-version</span><span class="token punctuation">:</span> <span class="token string">&quot;3.10&quot;</span></span>
<span class="line">          <span class="token key atrule">cache</span><span class="token punctuation">:</span> <span class="token string">&quot;pip&quot;</span> <span class="token comment"># 设置缓存</span></span>
<span class="line"></span>
<span class="line">      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> 安装依赖</span>
<span class="line">        <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string"></span>
<span class="line">          pip install -r main/script/requirements.txt</span></span>
<span class="line">      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> 运行脚本</span>
<span class="line">        <span class="token key atrule">env</span><span class="token punctuation">:</span></span>
<span class="line">          <span class="token comment">#设置secrets的环境变量</span></span>
<span class="line">          <span class="token key atrule">BAIDU_KEY</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.BAIDU_KEY <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
<span class="line">          <span class="token key atrule">BING_KEY</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.BING_KEY <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
<span class="line">          <span class="token key atrule">GOOGLE_JSON</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.GOOGLE_JSON <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
<span class="line">        <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string"></span>
<span class="line">          python main/script/submit.py --sitemap gh-pages/sitemap.xml --prevsitemap prev/sitemap.xml</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="配置解读" tabindex="-1"><a class="header-anchor" href="#配置解读"><span>配置解读</span></a></h2><h4 id="触发" tabindex="-1"><a class="header-anchor" href="#触发"><span>触发</span></a></h4><p>这个例子的触发机制如下：</p><ol><li>当有推送行为发生</li><li>推送分支为<code>gh-pages</code></li><li><code>sitemap.xml</code>文件被修改</li></ol><h4 id="配置运行环境" tabindex="-1"><a class="header-anchor" href="#配置运行环境"><span>配置运行环境</span></a></h4><p>这里指定<code>ubuntu-latest</code></p><h4 id="步骤" tabindex="-1"><a class="header-anchor" href="#步骤"><span>步骤</span></a></h4><ol><li><p>拉取 gh-pages 分支代码到路径<code>gh-pages</code></p></li><li><p>获取上一次提交SHA-1值使用如下命令，将获取到的倒数第二次git提交SHA-1值存储到环境变量<code>GITHUB_OUTPUT</code><sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup>中，方便后续使用</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"> <span class="token builtin class-name">cd</span> gh-pages</span>
<span class="line"> <span class="token assign-left variable">PREV</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">git</span> log <span class="token parameter variable">--format</span><span class="token operator">=</span><span class="token string">&quot;%H&quot;</span> <span class="token parameter variable">-n</span> <span class="token number">2</span> <span class="token operator">|</span> <span class="token function">tail</span> <span class="token parameter variable">-n</span> <span class="token number">1</span><span class="token variable">)</span></span></span>
<span class="line"> <span class="token builtin class-name">echo</span> <span class="token string">&quot;SHA_KEY=<span class="token variable">$PREV</span>&quot;</span> <span class="token operator">&gt;&gt;</span> <span class="token variable">$GITHUB_OUTPUT</span></span>
<span class="line"> <span class="token builtin class-name">echo</span> <span class="token variable">$PREV</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>获取上一步存储到到<code>GITHUB_OUTPUT</code>的commitid，并拉取代码代码到路径prev，ref可以是分支，tag，commitid</p><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml" data-title="yml"><pre><code><span class="line"> <span class="token key atrule">name</span><span class="token punctuation">:</span> 拉取prev代码</span>
<span class="line"> <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/checkout@v3</span>
<span class="line"> <span class="token key atrule">with</span><span class="token punctuation">:</span></span>
<span class="line">     <span class="token key atrule">ref</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> steps.last<span class="token punctuation">-</span>commit.outputs.SHA_KEY <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
<span class="line">     <span class="token key atrule">path</span><span class="token punctuation">:</span> prev</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>拉取main分支代码到路径main</p></li><li><p>安装python环境并设置缓存</p></li><li><p>安装python依赖库</p></li><li><p>运行脚本读取配置在仓库--&gt;Settings--&gt;Secrets and variables--&gt;Actions--&gt;Repository secrets中的环境变量，并把上次提交的sitemap.xml和本次提交的sitemap.xml作为命令行参数提交给python脚本</p><figure><img src="https://s3.bmp.ovh/imgs/2023/04/17/67c1bc7646f4be1d.png" alt="Repository secrets" tabindex="0" loading="lazy"><figcaption>Repository secrets</figcaption></figure></li></ol><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="footnote1" class="footnote-item"><p><a href="https://docs.github.com/zh/actions/using-workflows/workflow-commands-for-github-actions#setting-an-environment-variable" target="_blank" rel="noopener noreferrer">设置步骤的输出参数</a> <a href="#footnote-ref1" class="footnote-backref">↩︎</a></p></li></ol></section>`,12))])}const v=t(r,[["render",d],["__file","auto-push.html.vue"]]),b=JSON.parse('{"path":"/blog/auto-push.html","title":"如何利用GitHub Action提交URL到搜索引擎","lang":"zh-CN","frontmatter":{"title":"如何利用GitHub Action提交URL到搜索引擎","shortTitle":"如何自动提交URL到搜索引擎","date":"2023-04-17T00:00:00.000Z","icon":"yaml","star":true,"isOriginal":true,"cover":"https://w.wallhaven.cc/full/l3/wallhaven-l3xk6q.jpg","category":["Blog"],"tag":["Blog","GitHub Action"],"description":"相关信息 这是一个GitHub Actions的配置文件，整体思路是，获取本次更新的url （通过对比两次提交的sitemap.xml文件），所以触发条件是deploy分支有推送并修改了sitemap.xml文件，再利用python脚本进行url推送到百度、Bing、Google 脚本代码请看这里👉提交URL到搜索引擎（百度、Bing、Google）","head":[["meta",{"property":"og:url","content":"https://www.cnmd.icu/blog/auto-push.html"}],["meta",{"property":"og:site_name","content":"氚花盏-三个三"}],["meta",{"property":"og:title","content":"如何利用GitHub Action提交URL到搜索引擎"}],["meta",{"property":"og:description","content":"相关信息 这是一个GitHub Actions的配置文件，整体思路是，获取本次更新的url （通过对比两次提交的sitemap.xml文件），所以触发条件是deploy分支有推送并修改了sitemap.xml文件，再利用python脚本进行url推送到百度、Bing、Google 脚本代码请看这里👉提交URL到搜索引擎（百度、Bing、Google）"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://w.wallhaven.cc/full/l3/wallhaven-l3xk6q.jpg"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-07T05:22:57.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://w.wallhaven.cc/full/l3/wallhaven-l3xk6q.jpg"}],["meta",{"name":"twitter:image:alt","content":"如何利用GitHub Action提交URL到搜索引擎"}],["meta",{"property":"article:tag","content":"Blog"}],["meta",{"property":"article:tag","content":"GitHub Action"}],["meta",{"property":"article:published_time","content":"2023-04-17T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-07T05:22:57.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"如何利用GitHub Action提交URL到搜索引擎\\",\\"image\\":[\\"https://s3.bmp.ovh/imgs/2023/04/17/67c1bc7646f4be1d.png\\"],\\"datePublished\\":\\"2023-04-17T00:00:00.000Z\\",\\"dateModified\\":\\"2024-04-07T05:22:57.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"三个三\\",\\"url\\":\\"https://www.cnmd.icu\\",\\"email\\":\\"mailto:2029364173@qq.com\\"}]}"]]},"headers":[{"level":2,"title":"流程解读","slug":"流程解读","link":"#流程解读","children":[]},{"level":2,"title":"配置代码","slug":"配置代码","link":"#配置代码","children":[]},{"level":2,"title":"配置解读","slug":"配置解读","link":"#配置解读","children":[]}],"git":{"createdTime":1712467377000,"updatedTime":1712467377000,"contributors":[{"name":"三个三","email":"2029364173@qq.com","commits":1}]},"readingTime":{"minutes":2.8,"words":839},"filePathRelative":"blog/auto-push.md","localizedDate":"2023年4月17日","excerpt":"<div class=\\"hint-container info\\">\\n<p class=\\"hint-container-title\\">相关信息</p>\\n<p>这是一个<code>GitHub Actions</code>的配置文件，整体思路是，获取本次更新的url<br>\\n（通过对比两次提交的sitemap.xml文件），所以触发条件是deploy分支有推送并修改了<code>sitemap.xml</code>文件，再利用python脚本进行url推送到百度、Bing、Google</p>\\n<p>脚本代码请看这里👉<a href=\\"/posts/Python/submit-url\\">提交URL到搜索引擎（百度、Bing、Google）</a></p>\\n</div>\\n","autoDesc":true}');export{v as comp,b as data};
